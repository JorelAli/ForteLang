{
    genList = f:func -> n:num -> match n
        | 0 ->> []
        | ->> genList f (n - 1) ++ [f n];

    map = f:func -> l:list -> match l
        | [] ->> []
        | ->> [f (head l)] ++ map f (tail l);

    all = l:list -> match l
        | [] ->> true
        | ->> |>
            | head l ->> all (tail l)
            | ->> false;

    any = l:list -> match l 
        | [] ->> false
        | ->> |>
            | head l ->> true
            | ->> any (tail l);

    elemAt = l:list -> n:num -> match n 
        | 0 ->> head l
        | ->> elemAt (tail l) (n - 1);

    filter = f:func -> l:list -> match l
        | [] ->> []
        | ->> (|>
            | f (head l) ->> [head l]
            | ->> []) ++ filter f (tail l);

}
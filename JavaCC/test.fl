include {
    # Adds two parameters together
    add = x -> y -> x + y;

    basicOperation = 123.25 + 2;

    # Lists
    someList      = [x, y];
    someOtherList = [x];
    emptyList     = [];

    x = 10;

    ### Example with guards
    max = x -> y -> 
        | x > y ->> x
        | y > x ->> s
        | ->> y;###

    # Set operations
    union =      set1 -> set2 -> set1 /+ set2;
    intersect =  set1 -> set2 -> set1 /- set2;
    difference = set1 -> set2 -> set1 // set2;

    # Adds sets to scope of expressions
    myFunctions2 = include {
        myAdd = x -> y -> x + y;
    } in myAdd 2;

#    factorial = (input ->
#        | input == 0 ->> 1
#        | ->> input * (factorial (input - 1)));
        
} in "" ++ "hello!"

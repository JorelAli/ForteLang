include {
    add = a -> b -> a + b;
    sub = a -> b -> a - b;
    mul = a -> b -> a * b;
    div = a -> b -> a / b;

    # Things to do
    all = list -> false; 
    filter = list -> [];
    foldl = op -> init -> list -> 2;

    #head = list -> x;
    #tail = list -> xs;
    length = list -> 0;
    map = list;

    x = 5;

} in include { y = 3; } in x + y

##tail [(x + 2), 5, 0, -2]